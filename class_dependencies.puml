
@startuml
' 1. Основные классы

class Компания {
  - String название
  - List<Склад> склады
  - List<Работник> сотрудники
  
  + содатьСклад(название: String): Склад
  + уничтожитьСклад(название: String): void
  + списокСкладов(): List<Склад>
  + нанятьРаботника(имя: String, должность: String): void
  + назначитьОтветственного(склад: Склад, работник: Работник): void
}

class Склад {
  - int id
  - String название
  - List<ЯчейкаСклада> ячейки
  - Работник ответственный
  - List<Работник> сотрудники
  - boolean открыт
  - String city
  
  + открытьСклад(): void
  + закрытьСклад(): void
  + переместитьТовар(Склад назначения, Товар товар, int количество): boolean
  + сменитьОтветственного(Работник новыйОтветственный): void
  + получитьИнформациюОТоварах(): Map<Товар, Integer>
  + добавитьЯчейку(ЯчейкаСклада ячейка): void
  + информацияОСкладе(): String
}

class ЯчейкаСклада {
  - int id
  - int вместимость
  - int занятоМеста
  - Товар товар
  
  + добавитьТовар(Товар товар, int количество): boolean
  + получитьТекущийТовар(): Товар
}

class Товар {
  - int id
  - String название
  - double цена
  - double ценаЗакупки
  - Type типТовара
  - int габаритыТовара
  - Status статус
  - int количество
  - Производитель производитель
  
  + получитьКоличество(int дельта): void
  + доступенДляЗакупки(): boolean
  + получитьСтоимость(): double
  + получитьРазмер(): int
}

class Работник {
  - int id
  - int местоРаботы
  - String имя
  - String должность
  - Date датаНайма
  
  + сменитьДолжность(String новаяДолжность): void
  + уволить(): void
}

class Покупатель {
  - int id
  - String имя
  - String город
  - List<Товар> историяПокупок
  - double баланс
  
  + купитьТовар(Товар товар, int количество): boolean
  + вернутьТовар(Товар товар, int количество): boolean
  + пополнитьБаланс(double сумма): void
}

class ПунктПродаж {
  - String название
  - List<Товар> доступныеТовары
  - List<Заказ> списокЗаказов
  - Склад связанныйСклад
  - double доходность
  
  + открытьПункт(): void
  + закрытьПункт(): void
  + продатьТовар(Товар товар, int количество, Покупатель покупатель): boolean
  + обработатьВозврат(Товар товар, int количество): void
  + получитьДоходность(): double
  + обновитьДоступныеТовары(): void
  + получитьТоварСоСклада(): boolean
}

class Производитель {
  - String название
  - String адрес
  - String контактныйТелефон
  - String email
  - List<ТипТовара> типыТоваров
  - List<Товар> доступныеТовары
  
  + получитьИнформацию(): String
  + создатьТовар(ТипТовара, количество): void
}

' 2. Связи между классами

Компания "1" *-- "1..*" Склад: управляет
Склад "1" *-- "1..*" ЯчейкаСклада: содержит
ЯчейкаСклада "1" o-- "0..1" Товар: хранит
Производитель "1" o-- "0..1" Товар: создает
ПунктПродаж "1" --> "1" Склад: использует
Работник "1" -- "1..*" Склад: ответственен
ПунктПродаж "1" *-- "0..*" Покупатель: принимает
Компания "1" *-- "1..*" Работник: нанимает
@enduml
